service: access-count-api

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-west-2
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    DYNAMODB_USERS_TABLE_NAME: ${self:custom.usersTableName}

package:
  individually: true
  exclude:
    - "src/**"
    - "__tests__/**"
    - "coverage"
    - ".dynamodb"

custom: 
  usersTableName: users-table-${self:provider.stage}
  # dynamodb: 
  #   stages: 
  #     - dev
  #   start:
  #     migrate: true
  # serverless-offline:
  #   resourcesRoutes: true

plugins:
  - serverless-iam-roles-per-function
  # - serverless-dynamodb-local
  # - serverless-offline

functions:
  api:
    handler: dist/handler.handler
    events:
      - httpApi: '*'

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.usersTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: emailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: usernameIndex
            KeySchema:
              - AttributeName: username
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1